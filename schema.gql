# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Address {
  city: String
  geo: Geo
  street: String
  suite: String
  zipcode: String
}

input AddressInput {
  city: String
  geo: GeoInput
  street: String
  suite: String
  zipcode: String
}

type Avatar {
  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  blank: Boolean

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  mediumUrl: String

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  originalUrl: String

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  thumbUrl: String

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  transform: AvatarTransform
}

input AvatarInput {
  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  blank: Boolean = false

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  mediumUrl: String = ""

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  originalUrl: String = ""

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  thumbUrl: String = ""

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  transform: AvatarTransformInput
}

type AvatarTransform {
  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  angle: Float

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  rect: AvatarTransformRect

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  zoom: Float
}

input AvatarTransformInput {
  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  angle: Float = 0

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  rect: AvatarTransformRectInput

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  zoom: Float = 1
}

type AvatarTransformRect {
  """height of avatar"""
  h: Float

  """width of avatar"""
  w: Float

  """vertical deviation of avatar"""
  x: Float

  """horizontal deviation of avatar"""
  y: Float
}

input AvatarTransformRectInput {
  """height of avatar"""
  h: Float = 1

  """width of avatar"""
  w: Float = 1

  """vertical deviation of avatar"""
  x: Float = 0

  """horizontal deviation of avatar"""
  y: Float = 0
}

type City {
  title: String
}

input CityInput {
  title: String
}

type Config {
  _id: String!
  countries: [Country!]!
  jobs: [Job!]!
  lingos: [Lingo!]!
  nationalities: [Nationality!]!
}

type Country {
  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  cities: [City]
  title: String
}

input CountryInput {
  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  cities: [CityInput] = []
  title: String
}

type Course {
  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  course: String

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  endDate: String

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  institution: String

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  startDate: String
}

input CourseInput {
  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  course: String = ""

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  endDate: String = ""

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  institution: String = ""

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  startDate: String = ""
}

input CreateAndUpdateResumeInput {
  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  courses: [CourseInput] = []

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  customSections: [CustomSectionInput] = []

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  educations: [EducationInput] = []

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  employmentHistories: [EmploymentHistoryInput] = []

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  hobbies: [HobbieInput] = []

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  languages: [LanguageInput] = []

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  personalDetail: PersonalDetailInput = {}

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  professionalSummary: ProfessionalSummaryInput = {}

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  references: [ReferenceInput] = []

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  skills: [SkillInput] = []

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  socialLinks: [SocialLinkInput] = []
}

input CreateConfigInput {
  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  countries: [CountryInput] = []

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  jobs: [JobInput] = []

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  lingos: [LingoInput] = []

  """
  
  This field
  - have a default value
  - can be declared as null
  - is optional
  
  """
  nationalities: [NationalityInput] = []
}

input CreatePersonInput {
  address: AddressInput
  email: String!
  name: String!
  phone: String
  username: String!
  website: String
}

type CustomSection {
  items: [Section!]!
  title: String
}

input CustomSectionInput {
  items: [SectionInput!]!
  title: String
}

type Education {
  city: String
  degree: String
  description: String
  endDate: String
  school: String
  startDate: String
}

input EducationInput {
  city: String
  degree: String
  description: String
  endDate: String
  school: String
  startDate: String
}

type EmploymentHistory {
  city: String
  description: String
  employer: String
  endDate: String
  jobTitle: String
  startDate: String
}

input EmploymentHistoryInput {
  city: String
  description: String
  employer: String
  endDate: String
  jobTitle: String
  startDate: String
}

type FileUpload {
  mediumUrl: String!
  originalUrl: String!
  success: Boolean
  thumbUrl: String!
}

input FileUploadInput {
  mediumUrl: String!
  originalUrl: String!
  success: Boolean
  thumbUrl: String!
}

type Geo {
  lat: String
  lng: String
}

input GeoInput {
  lat: String
  lng: String
}

type Hobbie {
  text: String
}

input HobbieInput {
  text: String
}

type Job {
  title: String
}

input JobInput {
  title: String
}

type Language {
  language: String
  level: Int
}

input LanguageInput {
  language: String
  level: Int
}

type Lingo {
  title: String
}

input LingoInput {
  title: String
}

input ListConfigsInput {
  countries: CountryInput
  jobs: JobInput
  lingos: LingoInput
  nationalities: NationalityInput
}

input ListPersonInput {
  _id: String
  address: AddressInput
  email: String
  name: String
  phone: String
  username: String
  website: String
}

input ListResumesInput {
  _id: String!
  personalDetail: PersonalDetailInput
  professionalSummary: ProfessionalSummaryInput
}

type Mutation {
  bulkDeleteConfigs(_ids: [String!]!): Boolean
  bulkDeletePersons(_ids: [String!]!): Boolean
  bulkDeleteResumes(_ids: [String!]!): Boolean
  createConfig(payload: CreateConfigInput!): Config!
  createPerson(payload: CreatePersonInput!): Person!
  createResume(payload: CreateAndUpdateResumeInput!): Resume!
  deleteAllConfigs: Boolean
  deleteAllResumes: Boolean
  deleteConfig(_id: String!): Config!
  deletePerson(_id: String!): Person!
  deleteResume(_id: String!): Resume!
  updatePerson(payload: UpdatePersonInput!): Person!

  """Massive resume update operation"""
  updateResume(_id: String!, payload: CreateAndUpdateResumeInput!): Resume!
  uploadFile(file: Upload!, id: String!): FileUpload!
}

type Nationality {
  title: String
}

input NationalityInput {
  title: String
}

type Person {
  _id: String!
  address: Address
  email: String
  name: String
  phone: String
  resumes(populate: Boolean!): [Resume!]!
  username: String
  website: String
}

type PersonalDetail {
  address: String
  avatar: Avatar!
  city: String
  country: String
  dateOfBirth: String
  drivingLicense: String
  email: String
  firstName: String
  lastName: String
  nationality: String
  phone: String
  placeOfBirth: String
  postalCode: String
  wantedJobTitle: String
}

input PersonalDetailInput {
  address: String
  avatar: AvatarInput!
  city: String
  country: String
  dateOfBirth: String
  drivingLicense: String
  email: String
  firstName: String
  lastName: String
  nationality: String
  phone: String
  placeOfBirth: String
  postalCode: String
  wantedJobTitle: String
}

type ProfessionalSummary {
  text: String
}

input ProfessionalSummaryInput {
  text: String
}

type Query {
  config(_id: String!): Config!
  configs(filters: ListConfigsInput): Config!
  person(_id: String!): Person!
  persons(filters: ListPersonInput): [Person!]!
  resume(_id: String!): Resume!
  resumes(filters: ListResumesInput): [Resume!]!
}

type Reference {
  company: String
  displayStatus: String
  email: String
  fullName: String
  phone: String
  title: String
}

input ReferenceInput {
  company: String
  displayStatus: String
  email: String
  fullName: String
  phone: String
  title: String
}

type Resume {
  _id: String!
  courses: [Course!]
  customSections: [CustomSection!]
  educations: [Education!]
  employmentHistories: [EmploymentHistory!]!
  hobbies: [Hobbie!]
  languages: [Language!]
  personalDetail: PersonalDetail!
  professionalSummary: ProfessionalSummary
  references: [Reference!]
  skills: [Skill!]
  socialLinks: [SocialLink!]
}

type Section {
  city: String
  description: String
  endDate: String
  startDate: String
  title: String
}

input SectionInput {
  city: String
  description: String
  endDate: String
  startDate: String
  title: String
}

type Skill {
  level: Int
  skill: String
}

input SkillInput {
  level: Int
  skill: String
}

type SocialLink {
  address: String
  platform: String
}

input SocialLinkInput {
  address: String
  platform: String
}

input UpdatePersonInput {
  _id: String!
  address: AddressInput
  email: String
  name: String
  phone: String
  username: String
  website: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload
